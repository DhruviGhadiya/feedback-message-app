import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import AuthProvider from "@/context/AuthProvider";
import { Toaster } from "@/components/ui/sonner";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// const geistSans = Geist({
//   subsets: ["latin"],
//   display: "swap",
// });

// const geistMono = Geist_Mono({
//   subsets: ["latin"],
//   display: "swap",
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <AuthProvider>
      <body
        // className={`${geistSans.className} ${geistMono.className} antialiased`}
      >
        {children}
        <Toaster/>
      </body>
      </AuthProvider>
    </html>
  );
}


// import type { Metadata } from 'next';
// import { Inter } from 'next/font/google';
// import './globals.css';
// import AuthProvider from '../context/AuthProvider';
// import { Toaster } from '../components/ui/sonner';

// const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'True Feedback',
//   description: 'Real feedback from real people.',
// };

// interface RootLayoutProps {
//   children: React.ReactNode;
// }

// export default async function RootLayout({ children }: RootLayoutProps) {
//   return (
//     <html lang="en" >
//       <AuthProvider>
//         <body className={inter.className}>
//           {children}
//           <Toaster />
//         </body>
//       </AuthProvider>
//     </html>
//   );
// }
